# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cCKjOrPUL_tqa-mPgNlJ2v_M1pVB7zEt
"""

# -*- coding: utf-8 -*-
"""Customer Acquisition Cost Analysis

This script analyzes customer acquisition cost (CAC), conversion rates, and break-even customers
for different marketing channels using a dataset.
"""

import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import plotly.io as pio

pio.templates.default = "plotly_white"

def load_data(file_path):
    """Load marketing data from CSV and display basic information."""
    data = pd.read_csv(file_path)
    print("Dataset Preview:")
    print(data.head())
    print("\nDataset Info:")
    print(data.info())
    return data

def calculate_metrics(data):
    """Calculate CAC, Conversion Rate, and Break-Even Customers."""
    data['CAC'] = data['Marketing_Spend'] / data['New_Customers']
    data['Conversion_Rate'] = (data['New_Customers'] / data['Marketing_Spend']) * 100
    data['Break_Even_Customers'] = data['Marketing_Spend'] / data['CAC']
    return data

def summarize_metrics(data):
    """Display summary statistics for CAC by marketing channel."""
    summary_stats = data.groupby('Marketing_Channel')['CAC'].describe()
    print("\nCAC Summary Statistics by Marketing Channel:")
    print(summary_stats)

def visualize_cac(data):
    """Visualize CAC by marketing channel."""
    fig = px.bar(data, x='Marketing_Channel', y='CAC', title='CAC by Marketing Channel')
    fig.write_html("cac_by_channel.html")
    fig.show()

def visualize_conversion_rate(data):
    """Visualize conversion rates by marketing channel."""
    fig = px.bar(data, x='Marketing_Channel', y='Conversion_Rate', title='Conversion Rates by Marketing Channel')
    fig.write_html("conversion_rates.html")
    fig.show()

def visualize_new_customers_vs_cac(data):
    """Visualize new customers vs. CAC with trendline."""
    fig = px.scatter(data, x='New_Customers', y='CAC', color='Marketing_Channel',
                     title='New Customers vs. CAC', trendline='ols')
    fig.write_html("new_customers_vs_cac.html")
    fig.show()

def compare_actual_vs_break_even(data):
    """Compare actual vs. break-even customers by marketing channel."""
    fig = go.Figure()
    fig.add_trace(go.Bar(x=data['Marketing_Channel'], y=data['New_Customers'],
                         name='Actual Customers Acquired', marker_color='royalblue'))
    fig.add_trace(go.Bar(x=data['Marketing_Channel'], y=data['Break_Even_Customers'],
                         name='Break-Even Customers', marker_color='lightcoral'))
    fig.update_layout(barmode='group', title='Actual vs. Break-Even Customers by Marketing Channel',
                      xaxis_title='Marketing Channel', yaxis_title='Number of Customers')
    fig.write_html("actual_vs_break_even.html")
    fig.show()

if __name__ == "__main__":
    file_path = "/content/customer_acquisition_cost_dataset.csv"
    df = load_data(file_path)
    df = calculate_metrics(df)
    summarize_metrics(df)
    visualize_cac(df)
    visualize_conversion_rate(df)
    visualize_new_customers_vs_cac(df)
    compare_actual_vs_break_even(df)